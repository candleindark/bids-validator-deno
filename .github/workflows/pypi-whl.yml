name: PyPI Whl Publish

on:
  push:
    branches:
      - main
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build_wheels:
    name: Build whl on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # windows-latest is an Intel runner
        # macos-13 is an Intel runner, macos-latest is an Apple Silicon runner
        # ubuntu-latest is an Intel runner, ubuntu-24.04-arm is an arm runner
        os: 
          - windows-latest
          - macos-13
          - macos-latest
          - ubuntu-latest
          - ubuntu-24.04-arm
      fail-fast: false
    defaults:
      run:
        working-directory: tools/pypi-whl
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          working-directory: .
      - uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
      - name: Install build
        run: python -m pip install build twine
      - name: Compile deno binaries
        run: |
          mkdir dist
          deno compile -ERNW -o dist/bids-validator jsr:@bids/validator
      - name: Build wheel
        run: python -m build --wheel
      - uses: actions/upload-artifact@v4
        with:
          name: bids-validator-${{ matrix.os }}
          path: |
            dist/bids-validator
            dist/bids-validator.*
      - name: Print out the content of the dist folder
        run: ls -l dist/
      - uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}
          path: dist/*.whl
      - name: Publish wheels if corresponds to a tag
        # TODO: might be suboptimal since we might skip a tag if not the latest commit
        run: |
            # if a clean tag, no - in it
            if git describe | grep -e -; then 
                echo not releasing; 
            else
                twine upload --verbose --repository testpypi dist/*.whl
            fi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
